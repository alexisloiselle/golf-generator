{"version":3,"sources":["logic/models/course.ts","logic/draw.ts","logic/models/vector.ts","logic/models/point.ts","logic/models/spline.ts","logic/useWindowDimensions.ts","SpringComponent.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Ground","generateSvgPath","points","path","x","y","isLengthEven","length","i","p1","midPoint","add","div","p0","substract","Vector","this","Math","sqrt","vector","factor","v1","v2","Point","v","f","divider","Spline","t","bLooped","p2","p3","floor","tt","ttt","q1","q2","q3","q4","tx","ty","Course","height","width","terrain","fairwayOutline","roughOutline","teeCenter","greenCenter","initializeArray","basePath","generateBasePath","rough","generateRough","getAnchors","fairway","generateFairway","outlineFromSpline","j","upperBound","getRandomInt","lowerBound","push","lastMove","undefined","moves","move","count","interval","anchors","forEach","anchor","widthMin","leftmost","rightmost","unshift","widthLeft","widthRight","next","prev","vect1","vect2","normalize","bisect","origin","radius","spline","array","pos","getSplinePoint","min","max","ceil","random","getWindowDimensions","window","innerWidth","innerHeight","SpringComponent","from","to","style","interpolator","interpolate","reset","native","d","usePrevious","value","ref","useRef","useEffect","current","getPolePath","point","getFlagPath","App","useState","windowDimensions","setWindowDimensions","handleResize","addEventListener","removeEventListener","useWindowDimensions","isFirstGen","setIsFirstGen","holePoint","setHolePoint","hole","setHole","tee","setTee","greenPath","setGreenPath","teePath","setTeePath","fairwayPath","setFairwayPath","roughPath","setRoughPath","forestPath","setForestPath","prevHolePoint","prevHole","prevTee","prevGreen","prevTeePath","prevFairway","prevRough","prevForest","adjustForest","newWidth","newHeight","a","b","getCourse","course","teeX","teeY","gX","gY","map","p","className","onClick","position","top","left","viewBox","fill","xmlns","strokeWidth","stroke","strokeLinejoin","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.b3ca4550.chunk.js","sourcesContent":["import Point from \"./point\";\nimport Spline from \"./spline\";\nimport Vector from \"./vector\";\n\nexport enum Ground {\n  HOLE,\n  GREEN,\n  FAIRWAY,\n  ROUGH,\n  FOREST,\n  FLAG_BASE,\n  FLAG,\n}\n\nexport default class Course {\n  public height = 780;\n  public width = 780;\n  public terrain: (Ground | null)[][] = [];\n\n  public fairwayOutline: Point[] = [];\n  public roughOutline: Point[] = [];\n  public teeCenter: Point;\n  public greenCenter: Point;\n\n  constructor() {\n    this.initializeArray();\n    const basePath = this.generateBasePath();\n\n    const rough = this.generateRough(basePath, this.getAnchors(basePath, 5));\n    const fairway = this.generateFairway(\n      basePath,\n      this.getAnchors(basePath, 2)\n    );\n\n    this.roughOutline = this.outlineFromSpline(rough);\n    this.fairwayOutline = this.outlineFromSpline(fairway);\n\n    this.teeCenter = basePath[basePath.length - 1];\n    this.greenCenter = basePath[0];\n    // this.terrain[basePath[0].y - 1][basePath[0].x] = Ground.FLAG_BASE;\n    // this.terrain[basePath[0].y - 2][basePath[0].x] = Ground.FLAG_BASE;\n    // this.terrain[basePath[0].y - 2][basePath[0].x + 1] = Ground.FLAG;\n  }\n\n  private initializeArray(): void {\n    for (let i = 0; i < this.height; i++) {\n      this.terrain[i] = [];\n      for (let j = 0; j < this.width; j++) {\n        this.terrain[i][j] = null;\n      }\n    }\n  }\n\n  private generateBasePath(): Point[] {\n    const hBound = 240;\n    const upperBound = this.getRandomInt(120, 180);\n    const lowerBound = this.getRandomInt(120, 180);\n\n    const path: Point[] = [];\n    path.push(\n      new Point(this.getRandomInt(hBound, this.width - hBound), upperBound)\n    );\n\n    let lastMove: Point | undefined = undefined;\n\n    while (path[path.length - 1].y < this.height - lowerBound) {\n      const moves = [new Point(-20, 20), new Point(0, 10), new Point(20, 20)];\n      let move: Point;\n\n      if (path[path.length - 1].x < hBound) {\n        moves[0] = new Point(0, 10);\n      }\n\n      if (path[path.length - 1].x > this.width - hBound) {\n        moves[2] = new Point(0, 10);\n      }\n\n      if (lastMove === undefined || lastMove.x === 0) {\n        move = moves[this.getRandomInt(0, 3)];\n      } else if (lastMove.x < 0) {\n        move = moves[this.getRandomInt(0, 2)];\n      } else {\n        move = moves[this.getRandomInt(1, 3)];\n      }\n\n      path.push(\n        new Point(\n          path[path.length - 1].x + move.x,\n          path[path.length - 1].y + move.y\n        )\n      );\n      lastMove = move;\n    }\n\n    return path;\n  }\n\n  private getAnchors(path: Point[], count: number): Point[] {\n    const interval = Math.floor(path.length / count - 1);\n    const anchors: Point[] = [];\n\n    for (let t = 0; t < (count - 1) * interval + 1; t += interval) {\n      anchors.push(path[t]);\n    }\n\n    anchors.push(path[path.length - 1]);\n\n    return anchors;\n  }\n\n  private generateRough(path: Point[], anchors: Point[]): Spline {\n    const rough = new Spline();\n    let i = 0;\n    anchors.forEach((anchor, j) => {\n      const widthMin: number = this.getRandomInt(140, 180);\n      if (j === 0) rough.points.push(new Point(anchor.x, anchor.y - 100));\n\n      let leftmost: Point = new Point(anchor.x - widthMin, anchor.y);\n      let rightmost: Point = new Point(anchor.x + widthMin, anchor.y);\n\n      while (!(path[i].x === anchor.x && path[i].y === anchor.y)) {\n        if (path[i].x < leftmost.x) leftmost.x = path[i].x;\n\n        if (path[i].x > rightmost.x) rightmost.x = path[i].x;\n\n        i++;\n      }\n\n      rough.points.unshift(leftmost);\n      rough.points.push(rightmost);\n\n      if (j === anchors.length - 1)\n        rough.points.push(new Point(anchor.x, anchor.y + 80));\n    });\n\n    return rough;\n  }\n\n  private generateFairway(path: Point[], anchors: Point[]): Spline {\n    const widthMin = 50;\n    const widthMax = 70;\n    const fairway = new Spline();\n\n    for (let i = 0; i < anchors.length; i++) {\n      const widthLeft: number = this.getRandomInt(widthMin, widthMax);\n      const widthRight: number = this.getRandomInt(widthMin, widthMax);\n      let next: number = i + 1;\n      let prev: number = i - 1;\n\n      if (i === 0) prev = i;\n\n      if (i === anchors.length - 1) next = i;\n\n      const vect1: Vector = new Vector(\n        anchors[next].x - anchors[i].x,\n        anchors[next].y - anchors[i].y\n      );\n      const vect2: Vector = new Vector(\n        anchors[i].x - anchors[prev].x,\n        anchors[i].y - anchors[prev].y\n      );\n      vect1.normalize();\n      vect2.normalize();\n\n      const bisect: Vector = new Vector(\n        -1 * (vect1.y + vect2.y),\n        vect1.x + vect2.x\n      );\n      bisect.normalize();\n\n      fairway.points.unshift(\n        new Point(\n          Math.floor(anchors[i].x - bisect.x * widthLeft),\n          Math.floor(anchors[i].y - bisect.y * widthLeft)\n        )\n      );\n      fairway.points.push(\n        new Point(\n          Math.floor(anchors[i].x + bisect.x * widthRight),\n          Math.floor(anchors[i].y + bisect.y * widthRight)\n        )\n      );\n    }\n\n    return fairway;\n  }\n\n  private generateGreen(origin: Point, radius: number): Point[] {\n    const points: Point[] = [];\n    for (let y = -radius; y <= radius; y++) {\n      for (let x = -radius; x <= radius; x++) {\n        if (x * x + y * y < radius * radius) {\n          if (x * x + y * y < (radius - 20) * (radius - 20)) {\n            points.push(new Point(origin.y + y, origin.x + x));\n          }\n        }\n      }\n    }\n\n    return points;\n  }\n\n  private outlineFromSpline(spline: Spline): Point[] {\n    const array: Point[] = [];\n    for (let t = 0; t < spline.points.length; t += 0.2) {\n      const pos: Point = spline.getSplinePoint(t, true);\n      array.push(new Point(pos.y, pos.x));\n    }\n    return array;\n  }\n\n  private getRandomInt(min: number, max: number) {\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return Math.floor(Math.random() * (max - min)) + min; //The maximum is exclusive and the minimum is inclusive\n  }\n}\n","import Point from \"./models/point\";\n\nexport const generateSvgPath = (points: Point[]) => {\n  let path = `M ${points[0].x} ${points[0].y} `;\n  const isLengthEven = points.length % 2 === 0;\n\n  // points\n  for (let i = 0; i < points.length - (isLengthEven ? 3 : 2); i += 2) {\n    const p1 = points[i + 2];\n    const midPoint = points[i].add(points[i + 2]).div(2);\n    const p0 = points[i + 1].add(points[i + 1].substract(midPoint));\n    path = `${path} Q ${p0.x} ${p0.y} ${p1.x} ${p1.y} `;\n  }\n\n  //  last\n  if (isLengthEven) {\n    const p1 = points[0];\n    const midPoint = points[points.length - 2].add(points[0]).div(2);\n    const p0 = points[points.length - 1].add(\n      points[points.length - 1].substract(midPoint)\n    );\n    path = `${path} Q ${p0.x} ${p0.y} ${p1.x} ${p1.y}`;\n  }\n\n  return path;\n};\n","export default class Vector {\n  public x: number;\n  public y: number;\n  constructor(x: number, y: number) {\n    this.x = x;\n    this.y = y;\n  }\n\n  public normalize(): void {\n    const length: number = Math.sqrt(this.x * this.x + this.y * this.y);\n    if (length > 0) {\n      this.x /= length;\n      this.y /= length;\n    }\n  }\n\n  public add(vector: Vector): Vector {\n    return new Vector(this.x + vector.x, this.y + vector.y);\n  }\n\n  public substract(vector: Vector): Vector {\n    return new Vector(this.x - vector.x, this.y - vector.y);\n  }\n\n  public mul(factor: number): Vector {\n    return new Vector(this.x * factor, this.y * factor);\n  }\n\n  public static dot(v1: Vector, v2: Vector): number {\n    return v1.x * v2.x + v1.y * v2.y;\n  }\n}\n","import Vector from \"./vector\";\n\nexport default class Point {\n  public x: number;\n  public y: number;\n  constructor(x: number, y: number) {\n    this.x = x;\n    this.y = y;\n  }\n\n  toVector(): Vector {\n    return new Vector(this.x, this.y);\n  }\n\n  add(vector: Vector | Point) {\n    return new Point(this.x + vector.x, this.y + vector.y);\n  }\n\n  substract(v: Vector | Point) {\n    return new Point(this.x - v.x, this.y - v.y);\n  }\n\n  mul(f: number) {\n    return new Point(this.x * f, this.y * f);\n  }\n\n  div(divider: number) {\n    return new Point(this.x / divider, this.y / divider);\n  }\n}\n","import Point from \"./point\";\n\n// OneLoneCoder @ Github [https://github.com/OneLoneCoder/videos/blob/master/OneLoneCoder_Splines1.cpp]\nexport default class Spline {\n  public points: Point[] = [];\n\n  public getSplinePoint(t: number, bLooped: boolean): Point {\n    let p0: number, p1: number, p2: number, p3: number;\n\n    if (!bLooped) {\n      p1 = Math.floor(t) + 1;\n      p2 = p1 + 1;\n      p3 = p2 + 1;\n      p0 = p1 - 1;\n    } else {\n      p1 = Math.floor(t);\n      p2 = (p1 + 1) % this.points.length;\n      p3 = (p2 + 1) % this.points.length;\n      p0 = p1 >= 1 ? p1 - 1 : this.points.length - 1;\n    }\n\n    t = t - Math.floor(t);\n\n    const tt: number = t * t;\n    const ttt: number = tt * t;\n\n    const q1: number = -ttt + 2.0 * tt - t;\n    const q2: number = 3.0 * ttt - 5.0 * tt + 2.0;\n    const q3: number = -3.0 * ttt + 4.0 * tt + t;\n    const q4: number = ttt - tt;\n\n    const tx: number =\n      0.5 *\n      (this.points[p0].x * q1 +\n        this.points[p1].x * q2 +\n        this.points[p2].x * q3 +\n        this.points[p3].x * q4);\n    const ty: number =\n      0.5 *\n      (this.points[p0].y * q1 +\n        this.points[p1].y * q2 +\n        this.points[p2].y * q3 +\n        this.points[p3].y * q4);\n\n    return new Point(Math.floor(tx), Math.floor(ty));\n  }\n}\n","import { useState, useEffect } from \"react\";\n\nfunction getWindowDimensions() {\n  const { innerWidth: width, innerHeight: height } = window;\n  return {\n    width,\n    height,\n  };\n}\n\nexport default function useWindowDimensions() {\n  const [windowDimensions, setWindowDimensions] = useState(\n    getWindowDimensions()\n  );\n\n  useEffect(() => {\n    function handleResize() {\n      setWindowDimensions(getWindowDimensions());\n    }\n\n    window.addEventListener(\"resize\", handleResize);\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []);\n\n  return windowDimensions;\n}\n","import React from \"react\";\nimport { Spring, animated } from \"react-spring/renderprops\";\nimport { interpolate } from \"flubber\";\nimport { AnimatedValue } from \"react-spring\";\n\ninterface Props {\n  from: string;\n  to: string;\n  style?: React.CSSProperties;\n}\nconst SpringComponent: React.FunctionComponent<Props> = ({\n  from,\n  to,\n  style,\n}) => {\n  const interpolator = interpolate(from, to);\n\n  return (\n    <Spring\n      reset\n      native\n      from={{ t: 0 } as AnimatedValue<{ t: number }>}\n      to={{ t: 1 } as AnimatedValue<{ t: number }>}\n    >\n      {({ t }: AnimatedValue<{ t: number }>) => (\n        <animated.path style={style} d={t.interpolate(interpolator)} />\n      )}\n    </Spring>\n  );\n};\n\nexport default SpringComponent;\n","import React, { useState, useEffect, useRef } from \"react\";\nimport \"./App.css\";\nimport { generateSvgPath } from \"./logic/draw\";\nimport Course from \"./logic/models/course\";\nimport Point from \"./logic/models/point\";\nimport useWindowDimensions from \"./logic/useWindowDimensions\";\nimport SpringComponent from \"./SpringComponent\";\n\nfunction usePrevious<T>(value: T) {\n  const ref = useRef<T>();\n  useEffect(() => {\n    ref.current = value;\n  });\n  return ref.current;\n}\n\nconst getPolePath = (point: Point) => `M ${point.x} ${point.y} l 0 -45`;\nconst getFlagPath = (point: Point) =>\n  `M ${point.x} ${point.y - 45} l 18 6 l -18 6 z`;\n\nfunction App() {\n  const { width, height } = useWindowDimensions();\n  const [isFirstGen, setIsFirstGen] = useState(true);\n\n  const [holePoint, setHolePoint] = useState(new Point(390, 390));\n  const [hole, setHole] = useState(\n    \"M 388 390 a 2.5 2.5 0 1 0 5 0 a 2.5 2.5 0 1 0 -5 0\"\n  );\n  const [tee, setTee] = useState(\n    \"M 385 390 a 5 5 0 1 0 10 0 a 5 5 0 1 0 -10 0\"\n  );\n  const [greenPath, setGreenPath] = useState(\n    \"M 380 390 a 10 10 0 1 0 20 0 a 10 10 0 1 0 -20 0\"\n  );\n  const [teePath, setTeePath] = useState(\n    \"M 380 390 a 10 10 0 1 0 20 0 a 10 10 0 1 0 -20 0\"\n  );\n  const [fairwayPath, setFairwayPath] = useState(\n    \"M 370 390 a 20 20 0 1 0 40 0 a 20 20 0 1 0 -40 0\"\n  );\n  const [roughPath, setRoughPath] = useState(\n    \"M 350 390 a 40 40 0 1 0 80 0 a 40 40 0 1 0 -80 0\"\n  );\n  const [forestPath, setForestPath] = useState(\n    `M ${width / 2 - 60} ${height / 2} a 60 60 0 1 0 120 0 a 60 60 0 1 0 -120 0`\n  );\n\n  const prevHolePoint = usePrevious(holePoint) || holePoint;\n  const prevHole = usePrevious(hole) || hole;\n  const prevTee = usePrevious(tee) || tee;\n  const prevGreen = usePrevious(greenPath) || greenPath;\n  const prevTeePath = usePrevious(teePath) || teePath;\n  const prevFairway = usePrevious(fairwayPath) || fairwayPath;\n  const prevRough = usePrevious(roughPath) || roughPath;\n  const prevForest = usePrevious(forestPath) || forestPath;\n\n  const adjustForest = (\n    newWidth: number,\n    newHeight: number,\n    isFirstGen: boolean\n  ) => {\n    if (isFirstGen) {\n      return `M ${newWidth / 2 - 60} ${\n        newHeight / 2\n      } a 60 60 0 1 0 120 0 a 60 60 0 1 0 -120 0`;\n    }\n\n    const x = newWidth / 2;\n    const y = newHeight / 2;\n    const a = x * Math.sqrt(2);\n    const b = y * Math.sqrt(2);\n\n    return `M -${a - x} ${y} a ${a} ${b} 0 1 0 ${2 * a} 0 a ${a} ${b} 0 1 0 ${\n      -2 * a\n    } 0`;\n  };\n\n  useEffect(() => {\n    setForestPath(adjustForest(width, height, isFirstGen));\n  }, [width, height, isFirstGen]);\n\n  const getCourse = async () => {\n    if (isFirstGen) {\n      setIsFirstGen(false);\n      setForestPath(adjustForest(width, height, false));\n    }\n    const course = new Course();\n    const {\n      teeCenter: { x: teeX, y: teeY },\n      greenCenter: { x: gX, y: gY },\n      greenCenter,\n    } = course;\n    setHolePoint(greenCenter);\n    setGreenPath(`M ${gX - 30} ${gY} a 30 30 0 1 0 60 0 a 30 30 0 1 0 -60 0`);\n    setHole(`M ${gX - 2.5} ${gY} a 2.5 2.5 0 1 0 5 0 a 2.5 2.5 0 1 0 -5 0`);\n    setTeePath(`M ${teeX - 20} ${teeY} a 20 20 0 1 0 40 0 a 20 20 0 1 0 -40 0`);\n    setTee(`M ${teeX - 5} ${teeY} a 5 5 0 1 0 10 0 a 5 5 0 1 0 -10 0`);\n    setFairwayPath(\n      generateSvgPath(course.fairwayOutline.map((p) => new Point(p.y, p.x)))\n    );\n    setRoughPath(\n      generateSvgPath(course.roughOutline.map((p) => new Point(p.y, p.x)))\n    );\n  };\n\n  return (\n    <div className=\"container\" onClick={getCourse}>\n      <svg\n        style={{ position: \"fixed\", top: 0, left: 0 }}\n        viewBox={`0 0 ${width} ${height}`}\n        width={width}\n        height={height}\n        fill=\"#6A953B\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n      >\n        <SpringComponent from={prevForest} to={forestPath} />\n      </svg>\n      <svg\n        style={{ position: \"fixed\", top: 0, left: 0 }}\n        viewBox=\"0 0 780 780\"\n        width={width}\n        height={height}\n        fill=\"#90C656\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n      >\n        <SpringComponent from={prevRough} to={roughPath} />\n      </svg>\n      <svg\n        style={{ position: \"fixed\", top: 0, left: 0 }}\n        viewBox=\"0 0 780 780\"\n        width={width}\n        height={height}\n        fill=\"#A5D368\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n      >\n        <SpringComponent from={prevFairway} to={fairwayPath} />\n      </svg>\n      <svg\n        style={{ position: \"fixed\", top: 0, left: 0 }}\n        viewBox=\"0 0 780 780\"\n        width={width}\n        height={height}\n        fill=\"#B0DA74\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n      >\n        <SpringComponent from={prevTeePath} to={teePath} />\n        <SpringComponent from={prevGreen} to={greenPath} />\n      </svg>\n      <svg\n        style={{ position: \"fixed\", top: 0, left: 0 }}\n        viewBox=\"0 0 780 780\"\n        width={width}\n        height={height}\n        fill=\"#A5D368\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n      >\n        <SpringComponent from={prevTee} to={tee} />\n      </svg>\n      <svg\n        style={{ position: \"fixed\", top: 0, left: 0 }}\n        viewBox=\"0 0 780 780\"\n        width={width}\n        height={height}\n        fill=\"#416320\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n      >\n        <SpringComponent from={prevHole} to={hole} />\n      </svg>\n      <svg\n        style={{ position: \"fixed\", top: 0, left: 0 }}\n        viewBox=\"0 0 780 780\"\n        width={width}\n        height={height}\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n      >\n        <SpringComponent\n          from={getPolePath(prevHolePoint)}\n          to={getPolePath(holePoint)}\n          style={{ strokeWidth: 2, stroke: \"black\" }}\n        />\n        <SpringComponent\n          from={getFlagPath(prevHolePoint)}\n          to={getFlagPath(holePoint)}\n          style={{\n            stroke: \"#DD4D4B\",\n            strokeLinejoin: \"round\",\n            strokeWidth: 2,\n          }}\n        />\n        <SpringComponent\n          from={getFlagPath(prevHolePoint)}\n          to={getFlagPath(holePoint)}\n          style={{\n            fill: \"#DD4D4B\",\n          }}\n        />\n      </svg>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}